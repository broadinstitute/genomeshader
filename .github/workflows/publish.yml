# Publish to Pypi

name: Publish

on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*' 

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - name: Checkout latest tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}
      - name: Print latest tag
        run: echo "Latest tag is ${{ github.event.ref }}"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            # If we're running on rhel centos, install needed packages.
            if command -v yum &> /dev/null; then
              yum update -y && yum install -y perl-core openssl openssl-devel pkgconfig libatomic

              # If we're running on i686 we need to symlink libatomic
              # in order to build openssl with -latomic flag.
              if [[ ! -d "/usr/lib64" ]]; then
                ln -s /usr/lib/libatomic.so.1 /usr/lib/libatomic.so
              fi
            else
            # If we're running on debian-based system.
              apt update -y && apt-get install -y libssl-dev openssl pkg-config
            fi
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - name: Checkout latest tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}
      - name: Print latest tag
        run: echo "Latest tag is ${{ github.event.ref }}"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}
      - name: Print latest tag
        run: echo "Latest tag is ${{ github.event.ref }}"
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  publish:
    runs-on: ubuntu-latest
    needs: [linux, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
